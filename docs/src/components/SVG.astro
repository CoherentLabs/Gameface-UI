---
import { transform } from "typescript";

export interface Props {
  path: string;
  width?: string;
  height?: string;
  translate?: string;
  inline?: boolean;
}

const { path, width, height, translate } = Astro.props as Props;

const links = import.meta.glob("/src/assets/**/*.svg", {
  import: "default",
});

const matchedKey = Object.keys(links).find((key) => key.includes(`${path}`));

if (!matchedKey) {
  throw new Error(`SVG not found for path: ${path}`);
}

const linkedSvg = await links[matchedKey]();

const styles = () => {
  const styles = {
    width: width || "18vh",
    height: height || "auto",
    transform: translate ? `translate(${translate})` : undefined,
  };
  return styles;
};
---

<img src={linkedSvg.src} alt={linkedSvg.src} style={styles()} />

